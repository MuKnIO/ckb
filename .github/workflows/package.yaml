name: Package

concurrency:
  group: package-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'pkg/*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  CKB_CLI_VERSION: v0.101.2

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set tag
        run: |
          export GIT_TAG_NAME=` echo ${{ github.ref }} | awk -F '/' '{print $4}' `
          echo "GIT_TAG_NAME=$GIT_TAG_NAME" >> $GITHUB_ENV
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GIT_TAG_NAME}}
          release_name: ${{ env.GIT_TAG_NAME}}
          draft: true
          prerelease: true

  package-for-linux-aarch64:
    name: package-for-linux-aarch64
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set Env
      run: |
        export GIT_TAG_NAME=` echo ${{ github.ref }} | awk -F '/' '{print $4}' `
        echo "GIT_TAG_NAME=$GIT_TAG_NAME" >> $GITHUB_ENV
    - name: Add rust target
      run: rustup target add aarch64-unknown-linux-gnu
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y gcc-multilib && sudo apt-get install -y build-essential clang gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    - name: Build CKB and Package CKB
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
        QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
        QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
        GPG_SIGNER: ${{ secrets.GPG_SIGNER }}
        SKIP_CKB_CLI: true
      run: |
        export GIT_TAG_NAME=` echo ${{ github.ref }} | awk -F '/' '{print $4}' `
        export TOP_DIR=$(pwd)
        curl -LO https://www.openssl.org/source/openssl-1.1.1.tar.gz
        tar -xzf openssl-1.1.1.tar.gz
        cd openssl-1.1.1
        CC=aarch64-linux-gnu-gcc ./Configure linux-aarch64 shared
        CC=aarch64-linux-gnu-gcc make
        cd ..
        export OPENSSL_LIB_DIR=${TOP_DIR}/openssl-1.1.1
        export OPENSSL_INCLUDE_DIR=${TOP_DIR}/openssl-1.1.1/include
        PKG_CONFIG_ALLOW_CROSS=1 CC=gcc CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc cargo build --target=aarch64-unknown-linux-gnu --release
        gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output devtools/ci/signer.asc devtools/ci/signer.asc.gpg
        gpg --import devtools/ci/signer.asc
        devtools/ci/package.sh target/aarch64-unknown-linux-gnu/release/ckb
        mv ${{ github.workspace }}/releases/ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }} ${{ github.workspace }}
        mv ${{ github.workspace }}/releases/ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }}.asc ${{ github.workspace }}
        devtools/ci/qput-7z "releases/ckb_${GIT_TAG_NAME}_aarch64-unknown-linux-gnu"
    - name: upload-zip-file
      uses: actions/upload-artifact@v2
      with:
        name: ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }}
        path: ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }}
    - name: upload-asc-file
      uses: actions/upload-artifact@v2
      with:
        name: ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }}.asc
        path: ckb_${{env.GIT_TAG_NAME }}_${{env.REL_PKG }}.asc
    env:
      REL_PKG: aarch64-unknown-linux-gnu.tar.gz

  Upload_File:
    name: Upload_Zip_File
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - REL_PKG: aarch64-unknown-linux-gnu.tar.gz
    needs:
      - create-release
      - package-for-linux-aarch64
    steps:
    - uses: actions/checkout@v2
    - name: Set tag
      run: |
        export GIT_TAG_NAME=` echo ${{ github.ref }} | awk -F '/' '{print $4}' `
        echo "GIT_TAG_NAME=$GIT_TAG_NAME" >> $GITHUB_ENV
    - name: Prepare - Download tar
      uses: actions/download-artifact@v2
      with:
        name: ckb_${{env.GIT_TAG_NAME}}_${{ matrix.REL_PKG }}
    - name: Prepare - Download asc
      uses: actions/download-artifact@v2
      with:
        name: ckb_${{env.GIT_TAG_NAME}}_${{ matrix.REL_PKG }}.asc
    - name: Upload tar assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_name: ckb_${{env.GIT_TAG_NAME}}_${{ matrix.REL_PKG }}
        asset_path: ${{ github.workspace }}/ckb_${{env.GIT_TAG_NAME }}_${{ matrix.REL_PKG }}
        asset_content_type: application/octet-stream
    - name: Upload asc assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_name: ckb_${{env.GIT_TAG_NAME}}_${{ matrix.REL_PKG }}.asc
        asset_path: ${{ github.workspace }}/ckb_${{env.GIT_TAG_NAME }}_${{ matrix.REL_PKG }}.asc
        asset_content_type: application/octet-stream
